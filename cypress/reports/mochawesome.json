{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-01-28T15:58:42.066Z",
    "end": "2022-01-28T15:58:42.633Z",
    "duration": 567,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "64b38915-004f-4cca-aadc-22e67230f75b",
      "title": "",
      "fullFile": "cypress/integration/POSTuser.js",
      "file": "cypress/integration/POSTuser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e918bbd0-b7c3-41b3-aa14-eac8ae2d85b4",
          "title": "post user request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create user test",
              "fullTitle": "post user request create user test",
              "timedOut": null,
              "duration": 534,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://api.xendit.co/callback_virtual_accounts',\n  encoding: 'base64',\n  headers: {\n    'Authorization': 'Bearer' + accessToken\n  },\n  Authorization: {\n    'Authorization': \"VGVzdFNlY3JldFR5cGU=\"\n  },\n  body: {\n    \"external_id\": \"demo_14754597758172\",\n    \"bank_code\": \"BNI\",\n    \"name\": \"Rika Sutanto\",\n    \"external_id\": \"va-1475804036622\",\n    \"bank_code\": \"BNI\",\n    \"name\": \"Michael Chen\"\n  },\n  failOnStatusCode: false\n}).then(res => {\n  expect(res.status).to.equal(401);\n  expect(res.status).to.equal(200);\n  expect(res.body).to.have.length(144); // expect(res.body).to.equal('external_id','demo_14754597758172')\n  // expect(res.body).to.equal('bank_code','BNI')\n  // expect(res.body).to.equal('name','Rika Sutanto')\n  // expect(res.body).to.have.property('external_id','demo_14754597758172')\n  // expect(res.body).to.have.property('bank_code','BNI')\n  // expect(res.body).to.have.property('name','Rika Sutanto')\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 200",
                "estack": "AssertionError: expected 401 to equal 200\n    at Context.eval (http://localhost:49377/__cypress/tests?p=cypress\\integration\\POSTuser.js:124:29)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "8220514d-5808-4bdf-94f5-a7ae31ac08df",
              "parentUUID": "e918bbd0-b7c3-41b3-aa14-eac8ae2d85b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8220514d-5808-4bdf-94f5-a7ae31ac08df"
          ],
          "pending": [],
          "skipped": [],
          "duration": 534,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true,
        "reportDir": "cypress/reports"
      },
      "version": "6.0.1"
    }
  }
}